//Time Complexity: O(logN)
//Space Complexity: O(1)
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int L=0,R=nums.size()-1;
        while(L<=R){
            int M=L+(R-L)/2;
            if(nums[M]==target)
                return M;
            //Rotation is in left.
            if(nums[M]>nums[R]){
                if(nums[M]>target&&nums[L]<=target)
                    R=M-1;
                else
                    L=M+1;
            }
            //Rotation is in right.
            else if(nums[M]<nums[L]){
                if(nums[M]<target&&nums[R]>=target)
                    L=M+1;
                else
                    R=M-1;
            }
            //Normal case
            else{
                if(nums[M]>target)
                    R=M-1;
                else if(nums[M]<target)
                    L=M+1;
            }
            //cout<<L<<","<<M<<","<<R<<endl;
        }
        return -1;
    }
};
